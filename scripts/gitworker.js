const cp=require('child_process');const fs=require('fs');function sh(cmd){return cp.execSync(cmd,{stdio:'pipe'}).toString().trim();}function openUrl(u){const p=process.platform;if(p==='win32')cp.exec('start "" "'+u+'"');else if(p==='darwin')cp.exec('open "'+u+'"');else cp.exec('xdg-open "'+u+'"');}function slug(s){return s.toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/^-+|-+$/g,'').slice(0,24);}function parseRemote(u){if(u.startsWith('git@')){const m=u.match(/:(.+)\/(.+)\.git$/);return {owner:m[1],repo:m[2]};}if(u.startsWith('https://')){const m=u.match(/github\.com\/(.+)\/(.+)\.git$/);return {owner:m[1],repo:m[2]};}throw new Error('unsupported remote url');}function now(){const d=new Date();const z=n=>String(n).padStart(2,'0');return `${d.getFullYear()}${z(d.getMonth()+1)}${z(d.getDate())}-${z(d.getHours())}${z(d.getMinutes())}`;}function main(){const pend=JSON.parse(fs.readFileSync('.agent/changes/pending.json','utf8'));try{sh('git rev-parse --is-inside-work-tree');}catch{console.error('not a git repo');process.exit(1);}const remote=parseRemote(sh('git config --get remote.origin.url'));sh('git fetch --all');try{sh('git switch main');}catch{sh('git checkout -b main');}try{sh('git pull --ff-only');}catch{}const branch='feature/'+now()+'-'+slug(pend.summary||'change');try{sh('git checkout -b "'+branch+'"');}catch{sh('git switch "'+branch+'"');}sh('git add -A');try{sh('git commit -m "'+(pend.summary||'update')+' [changeset:'+pend.id+']"');}catch{}sh('git push -u origin "'+branch+'"');const pr='https://github.com/'+remote.owner+'/'+remote.repo+'/compare/'+branch+'?expand=1';console.log('Open PR:',pr);openUrl(pr);}main();
